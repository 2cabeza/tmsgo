"""
Django settings for logics project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import sys
from django.utils.translation import ugettext_lazy as _

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# sys.path.insert(0, os.path.join(BASE_DIR, ''))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'jvc8r1b6m)g%i=)8c4d$@shdo*-q5^+dh!e39^1fg9wrb@q&h^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#ALLOWED_HOSTS = ['demo-admin.tmsgo.cl', 'admin.tmsgo.cl',  'localhost', 'sms-admin.tmsgo.cl']
ALLOWED_HOSTS = ['tmsgo-pboz.onrender.com']


# Application definition

DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

THIRD_APPS = [
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'django_translation_flags',
    'colorfield',
    'django_filters',
    'ckeditor',
    # 'ckeditor',
    'import_export',
]

PROJECT_APPS = [
    'app_transport_services',
    'app_general',
    'app_application',
    'app_component',
    'app_catalog',
    'app_purchase_order'
]

INSTALLED_APPS = DJANGO_APPS + THIRD_APPS + PROJECT_APPS

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'logics.urls'

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'logics.wsgi.application'

# Cache
CACHE_DEFAULT_EXPIRY_LONG = 60 * 60 * 12
CACHE_DEFAULT_EXPIRY_SHORT = 60 * 60 * 1

# Cors
CORS_ORIGIN_ALLOW_ALL = True

default_headers = (
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
)

CORS_ALLOW_HEADERS = default_headers + (
    'authpayload',
)

CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.postgresql_psycopg2',
#        'NAME': 'fbdb',
#        'HOST': 'localhost',
#        'USER': 'fbdbuser',
#        'PASSWORD': '357357',
#        'PORT': '5432',
#    }
#}
# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'fbdb_zu0l',
        'HOST': 'dpg-ciah2898g3nden4ffdc0-a.oregon-postgres.render.com',
        'PORT': '5432',
        'USER': 'fbdb_user',
        'PASSWORD': 'TKcQJwSOqN7FzBDzurl30vaRX5fkr9ku',
    }
}

"""DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'postgres',
        'HOST': 'localhost',
        'USER': 'postgres',
        'PASSWORD': '20Ant009.',
        'PORT': '5432',
        'OPTIONS': {
            'options': '-c timezone=UTC',
        },
    }
}"""


# Api Rest Framework
REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend']
}


# Django Import Export
IMPORT_EXPORT_USE_TRANSACTIONS = True

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Sendgrid
SENDGRID_API_KEY  = {
    'ma': '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',
    'grl': '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',
    'tap': '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',
}

# Recaptcha Google URL
GOOGLE_RECAPTCHA_URL = 'https://www.google.com/recaptcha/api/siteverify'
GOOGLE_RECAPTCHA_KEY = {
    'ma': '6Lcrmq0ZAAAAAOHB5k6N7unphc3WdwbpyywCNbBX',
    'grl': '6Lcrmq0ZAAAAAOHB5k6N7unphc3WdwbpyywCNbBX',
    'tap': '6Lcrmq0ZAAAAAOHB5k6N7unphc3WdwbpyywCNbBX',
}

# Django Geo Position
# GOOGLE_MAPS_API_KEY = 'AIzaSyBwhwyN50UrXJ2Ror778P2KjzmZXuqbit0'
GOOGLE_MAPS_API_KEY = 'AIzaSyCI8rmj0BbJNLoouKfaEcfG7p3WBo9wrDg'
GEOPOSITION_GOOGLE_MAPS_API_KEY = GOOGLE_MAPS_API_KEY

GEOPOSITION_MAP_OPTIONS = {
    'minZoom': 3,
    'maxZoom': 15,
}

GEOPOSITION_MARKER_OPTIONS = {
    'cursor': 'move'
}

# Send mails
SENDERS = {
    'ma': 'contacto@mutuoacuerdo.cl',
    'grl': 'jor.marquez82@gmail.com',
    'tap': 'contacto@tuabogadopenal.cl',
}

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

# CREDENTIALS CONFIG
CREDENTIALS_PATH = os.getcwd() + '/logics/credentials/'
GOOGLE_APPLICATION_CREDENTIALS = {
    'google': 'google-tms.json',
    'firebase': 'firebase-tms.json',
}


LANGUAGE_CODE = 'es'
TIME_ZONE = 'America/Santiago'
USE_I18N = True
USE_L10N = True
USE_TZ = True

_ = lambda s: s

LANGUAGES = (
 ('es', _('Espanish')),
 ('en', _('English')),
)

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale')
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/
MEDIA_DIR = 'media/upload'
MEDIA_ROOT = os.path.join(BASE_DIR, MEDIA_DIR)
STATIC_URL = '/static/'
RELATIVE_IMAGE_TEMP = 'upload/temp/'
STATIC_ROOT = os.path.join(BASE_DIR, "static/")
RELATIVE_IMAGE_PATH = 'images/%Y/%m/orig'
IMAGE_PATH = os.path.join(MEDIA_ROOT, RELATIVE_IMAGE_PATH)
MEDIA_URL = '{}://{}/media/upload/'.format('https', 'sms-admin.tmsgo.cl')
ROOT_URL = '{}://{}'.format('https', 'sms-admin.tmsgo.cl')
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, "static"),
# ]

CKEDITOR_UPLOAD_PATH = '/static/upload/'
CKEDITOR_CONFIGS = {
    'default': {
        'width': "auto",
        'height': "200",
        'toolbar': 'Custom',
        'toolbar_Custom': [
            ['Bold', 'Italic', 'Underline'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            ['Link', 'Unlink'],
            ['RemoveFormat', 'Source']
        ]
    }
}

TINYPNG_KEY = 'eTgonzNDmQy5vt8lOIGGJP5UNpGEM9A6'

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

###############
# LOCAL SETTINGS #
##################

# Allow any settings to be defined in local_settings.py which should be
# ignored in your version control system allowing for settings to be
# defined per machine.

# Importa las configuraciones locales si el archivo local_settings.py existe
try:
    from local_settings import *
except ImportError:
    pass
